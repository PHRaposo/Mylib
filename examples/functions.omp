; OM File Header - Saved 2021/01/27 14:29:54
; (6.17 :patc (om-make-point 52 137) (om-make-point 2 59) (om-make-point 1193 462) "" 183 0 "2021/01/27 14:21:53" "2021/01/27 14:29:54")
; End File Header
(in-package :om)(load-lib-for (quote ("Mylib")))(setf *om-current-persistent* (om-load-patch1 "functions" (quote ((let ((box (om-load-boxcall (quote bastype) "aux 4" (quote t) (quote nil) (om-make-point 949 140) (om-make-point 151 30) (list (list -4 -7) (list -3 -5) (list -2 -9)) "((-4 -7) (-3 -5) (-2 -9))" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "TEXT-BOX 2" (quote text-box) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 941 240) (om-make-point 161 40) (om-make-dialog-item (quote text-box) (om-make-point 1 1) (om-make-point 133 20) "((8 5) (9 7) (10 3))" :font (om-make-font "Verdana" 11.0D0 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) nil nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "MOD12 3" (quote mylib::mod12) (quote ((om-load-inputfun (quote input-funbox) "number, list or list of lists" "ARG1" -4))) (om-make-point 1000 180) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "TEXT-BOX" (quote text-box) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 829 240) (om-make-point 63 40) (om-make-dialog-item (quote text-box) (om-make-point 1 1) (om-make-point 35 20) "(8 5)" :font (om-make-font "Verdana" 11.0D0 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) nil nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 3" (quote t) (quote nil) (om-make-point 836 140) (om-make-point 58 30) (list -4 -7) "(-4 -7)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "MOD12 2" (quote mylib::mod12) (quote ((om-load-inputfun (quote input-funbox) "number, list or list of lists" "ARG1" -4))) (om-make-point 840 180) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "TEXT-VIEW 2" (quote text-view) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 688 240) (om-make-point 66 40) (let ((rep (om-make-dialog-item (quote text-view) (om-make-point 1 1) (om-make-point 42 20) "untitled"))) (om-set-dialog-item-text rep "8") rep) nil nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 709 139) (om-make-point 32 30) -4 "-4" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "MOD12" (quote mylib::mod12) (quote ((om-load-inputfun (quote input-funbox) "number, list or list of lists" "ARG1" -4))) (om-make-point 700 180) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 401 94) (quote "Example of a function (mod12) that accepts as arguments a number, a list of numbers or list of lists of numbers.") nil (om-make-point 703 27) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "TEXT-VIEW" (quote text-view) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 446 229) (om-make-point 100 40) (let ((rep (om-make-dialog-item (quote text-view) (om-make-point 1 1) (om-make-point 76 20) "untitled"))) (om-set-dialog-item-text rep "479001600") rep) nil nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 483 121) (om-make-point 34 30) 12 "12" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 180 48) (quote "Example of a recursive lisp function (factorial).") nil (om-make-point 429 32) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "MY-FUNCTION2" (quote mylib::my-function2) (quote ((om-load-inputfun (quote input-funbox) "Any number." "ANY-NUMBER" 12))) (om-make-point 457 161) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 334 78) (quote "                  NONSENSE FUNCTION$Example of a function with menu-ins and using OM functions (without om::function-name)") nil (om-make-point 30 32) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "MY-FUNCTION1" (quote mylib::my-function1) (quote ((om-load-inputfunmenu1 (quote input-funmenu) "Any number." "ANY-NUMBER" 5 (list (list "zero" 0) (list "one" 1) (list "two" 2) (list "three" 3) (list "four" 4) (list "five" 5) (list "six" 6))))) (om-make-point 130 155) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((2 0 1 0 nil 0) (0 0 2 0 nil 0) (5 0 3 0 nil 0) (4 0 5 0 nil 0) (8 0 6 0 nil 0) (7 0 8 0 nil 0) (13 0 10 0 nil 0) (11 0 13 0 nil 0))) nil 6.17))